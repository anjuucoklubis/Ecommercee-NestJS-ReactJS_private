// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id      Int    @id @default(autoincrement())
  role_id Int    @unique()
  name    String @db.VarChar(255)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User[]
}

model User {
  id           Int      @id @default(autoincrement())
  first_name   String   @db.VarChar(255)
  last_name    String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  password     String   @db.VarChar(255)
  birt_of_date String?  @db.VarChar(255)
  phone_number String?  @db.VarChar(255)
  image        String?  @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  role   Role @relation(fields: [roleId], references: [role_id])
  roleId Int  @default(3)

  addresses Address[]
}

model Address {
  id             Int    @id @default(autoincrement())
  title          String @db.VarChar(255)
  address_line_1 String @db.VarChar(255)
  address_line_2 String @db.VarChar(255)
  country        String @db.VarChar(255)
  city           String @db.VarChar(255)
  postal_code    String @db.VarChar(255)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model CategoryProduct {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  image     String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       String   @db.VarChar(255)
  stock       String   @db.VarChar(255)
  image       String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category   CategoryProduct @relation(fields: [categoryId], references: [id])
  categoryId Int
}
